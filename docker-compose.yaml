services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./public/uploads:/app/public/uploads
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
    depends_on:
      - db

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["npm", "run", "worker"]
    restart: always
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
    depends_on:
      - db

  db:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: ["mongod", "--auth", "--bind_ip_all"]
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "admin",
          "--eval",
          "db.auth('${MONGO_USERNAME}', '${MONGO_PASSWORD}'); db.adminCommand('ping')",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  mongodb_data:
